@{

    var totalOrders = TempData["TotalOrders"] as int[];
    var productNames = TempData["ProductNames"] as string[];

    var flavorProductNames = TempData["FlavorProductNames"] as List<string[]>;
    var flavorProductCount = TempData["FlavorProductCount"] as List<int[]>;

    var flavorName = TempData["FlavorName"] as List<string>;
    var flavorTotalSale = TempData["FlavorTotalSale"] as List<int>;
    var startDate = TempData["startDate"] as DateTime?;
    var endDate = TempData["endDate"] as DateTime?;

    var labels = TempData["Flavor1Labels"] as List<string>;
    var flavorsData =TempData["Flavor1Data"] as List<object>;
}


<head>
    <title>סרט מחולק לחתיכות</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div>
        <form id="dateForm" enctype="multipart/form-data">
            <div class="form-group">
                <label for="startDate">Start date:</label>
                <input type="date" id="startDate" name="startDate" value="@startDate?.Date" />

            </div>
            <div class="form-group">
                <label for="endDate">End date:</label>
                <input type="date" id="endDate" name="endDate" value="@endDate?.Date" />
            </div>
            <button type="submit" id="submitDate">Show graphs</button>
        </form>
    </div>
    <div style="display:flex;">
        <div style="width: 60%; margin: auto;">
            <h1>Product Sales</h1>
            <canvas id="myChart"></canvas>

        </div>

        <div style="width: 35%; margin: auto;">
            <h2>Distribution of the flavors sales of the selected product</h2>
            <canvas id="myChart1"></canvas>
        </div>
    </div>
  
    <div style="display:flex;">
    <div style="width: 40%; margin: auto;">
        <h1>flavors sales</h1>
        <canvas id="myChart2"></canvas>
    </div>
        <div style="width: 60%; margin: auto;">
            <h1>flavor sales</h1>
            <canvas id="chart3"></canvas>
         </div>
   </div>
   <h1 id="1">@startDate</h1>
    <h1 id="2">@endDate</h1>
    <script>
        // המרת מערכים C# למערכים ב-JavaScript
        var productNames = @Html.Raw(Json.Serialize(productNames));
        var totalOrders = @Html.Raw(Json.Serialize(totalOrders));
        var flavorProductNames = @Html.Raw(Json.Serialize(flavorProductNames));
        var flavorProductCount = @Html.Raw(Json.Serialize(flavorProductCount));
        

        var data = {
            labels: productNames,
            datasets: [{
                label: 'Products Sales',
                data: totalOrders
            }]
        };
        var canvas = document.getElementById('myChart');
        var ctx = document.getElementById('myChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'bar',
            data: data
        });

        var myChart1; // המשתנה myChart1 מוגדר מחוץ לפונקציה
        var canvas1 = document.getElementById('myChart1');
        var ctx1 = canvas1.getContext('2d');

        canvas.onclick = (evt) => {
            const res = chart.getElementsAtEventForMode(
                evt,
                'nearest',
                { intersect: true },
                true
            );
            // If didn't click on a bar, `res` will be an empty array
            if (res.length === 0) {
                return;
            }

            // Get the index of the clicked bar
            var clickedBarIndex = res[0].index;
            var clickedFlavorId = flavorProductNames[clickedBarIndex];
            var clickedFlavorCount = flavorProductCount[clickedBarIndex];



            // Check if myChart1 exists and destroy it
            if (myChart1) {
                myChart1.destroy();
            }

            // Create or update the chart in myChart1
            myChart1 = new Chart(ctx1, {
                type: 'doughnut',
                data: {
                    labels: clickedFlavorId,
                    datasets: [{
                        label: 'Easy as',
                        data: clickedFlavorCount
                    }],
                },
                options: {
                    responsive: true
                }
            });
        };



        var flavorName = @Html.Raw(Json.Serialize(flavorName));
        var FlavorTotalSale = @Html.Raw(Json.Serialize(flavorTotalSale));
        var data2 = {
            labels: flavorName,
            datasets: [{
                label: "Flavor sales",
                data: FlavorTotalSale
            }]
        };
        var canvas2 = document.getElementById('myChart2');
        var ctx2 = document.getElementById('myChart2').getContext('2d');
        var chart2 = new Chart(ctx2, {
            type: 'polarArea',
            data: data2
        });

        var labels = @Html.Raw(Json.Serialize(labels));
        var flavorsData = @Html.Raw(Json.Serialize(flavorsData));
        
        var chart3;
        data = {
            labels: labels,
            datasets: flavorsData
        };
        var canvas3 = document.getElementById('chart3');
        var ctx3 = document.getElementById('chart3').getContext('2d');
        var _data = data;
        chart3 = new Chart(ctx3, {
            type: 'line',
            data: _data
        });
        canvas2.onclick = (evt) => {
            const res = chart2.getElementsAtEventForMode(
                evt,
                'nearest',
                { intersect: true },
                true
            );
            // If didn't click on a bar, `res` will be an empty array
            if (res.length === 0) {
                return;
            }

            // Get the index of the clicked bar
            var clickedPolarAreaIndex = res[0].index;
            if (chart3.data.datasets[clickedPolarAreaIndex].hidden == true) {
                chart3.data.datasets[clickedPolarAreaIndex].hidden = false;
            }
            else { 
                chart3.data.datasets[clickedPolarAreaIndex].hidden = true;
            }

            // // Get the index of the same row in chart3
            // var chart3Index = flavorsData.findIndex((data) => data.label === flavorProductNames[clickedPolarAreaIndex]);

            // // Hide the chart3 for the clicked index
            // chart3[chart3Index].hide();
            chart3.update();
            
        };

    </script>
  
</body>